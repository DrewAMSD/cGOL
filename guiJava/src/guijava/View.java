/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guijava;

import com.mrjaffesclass.apcs.messenger.*;
/**
 *
 * @author drewa
 */
public class View extends javax.swing.JFrame implements MessageHandler {
    private final Messenger mvcMessaging;
    private javax.swing.JButton[][] panel;
    
    /**
     * Creates new form View
     */
    public View(Messenger messages) {
        this.mvcMessaging = messages;
        initComponents();
        
        this.panel = new javax.swing.JButton[Constants.ROWS][Constants.COLS];
        for (int row = 0; row < Constants.ROWS; row++) {
            for (int col = 0; col < Constants.COLS; col++) {
                //create JButton and add to array
                this.panel[row][col] = new javax.swing.JButton();
                String rowStr = (row > 9 ? ""+row : "0"+row);
                String colStr = (col > 9 ? ""+col : "0"+col);
                this.panel[row][col].setName(rowStr+colStr);
                this.panel[row][col].addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            cellClicked(evt);
                        }
                    });
                
                //add JButton to jPanel
                jPanel1.add(panel[row][col]);
            }
        }
    }
    
    public void init() {
        //subscribe to messages here
        this.mvcMessaging.subscribe("model:gridChanged", this);
        
        //other initializations
        clear();
    }
    
    public void clear() {
        for (int row = 0; row < Constants.ROWS; row++) {
            for (int col = 0; col < Constants.COLS; col++) {
                //change the setText to setIcon when you have image icon constants
                panel[row][col].setBackground(Constants.COLOR_DEAD);
            }
        }
    }
    
    public void updateGrid(boolean[][] grid) {
        for (int row = 0; row < Constants.ROWS; row++) {
            for (int col = 0; col < Constants.COLS; col++) {
                //change the setText to setIcon when you have image icon constants
                if (grid[row][col]) {
                    panel[row][col].setBackground(Constants.COLOR_ALIVE);
                } else {
                    panel[row][col].setBackground(Constants.COLOR_DEAD);
                }
            }
        }
    }

    @Override
    public void messageHandler(String messageName, Object messagePayload) {
        //notify that the message was received
        if (messagePayload != null) {
            System.out.println("MSG: received by view: "+messageName+" | "+messagePayload.toString());
        } else {
            System.out.println("MSG: received by view: "+messageName+" | No data sent");
        }
        
        switch (messageName) {
            case "model:gridChanged":
                boolean[][] grid = (boolean[][]) messagePayload;
                updateGrid(grid);
                break;
            default:
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnPanel = new javax.swing.JPanel();
        nextGenBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(1366, 768));

        jPanel1.setLayout(new java.awt.GridLayout(15, 25));

        btnPanel.setLayout(new java.awt.GridLayout());

        nextGenBtn.setText("Next Gen");
        nextGenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextGenBtnActionPerformed(evt);
            }
        });
        btnPanel.add(nextGenBtn);

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        btnPanel.add(clearBtn);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        this.mvcMessaging.notify("view:clearBtnClicked", "");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void nextGenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextGenBtnActionPerformed
        // TODO add your handling code here:
        this.mvcMessaging.notify("view:nextGenBtnClicked", "");
    }//GEN-LAST:event_nextGenBtnActionPerformed
    
    private void cellClicked(java.awt.event.ActionEvent evt) {
        javax.swing.JButton cell = (javax.swing.JButton) evt.getSource();
        int row = Integer.parseInt(cell.getName().substring(0,2));
        int col = Integer.parseInt(cell.getName().substring(2,4));
        Coordinate coordClicked = new Coordinate(row, col);
        this.mvcMessaging.notify("view:cellClicked", coordClicked);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnPanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nextGenBtn;
    // End of variables declaration//GEN-END:variables
}
